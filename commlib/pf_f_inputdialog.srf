HA$PBExportHeader$pf_f_inputdialog.srf
$PBExportComments$$$HEX40$$1dd3c5c508c7c4b3b0c67cb9200024c608d574d52000acc0a9c690c7d0c58cac200004ace8b25cd5200038bb90c7f4c544c7200085c725b81bbc94b2200030aea5b244c7200018c289d569d5c8b2e4b2$$ENDHEX$$.
global type pf_f_inputdialog from function_object
end type

forward prototypes
global function integer pf_f_inputdialog (string as_wintitle, string as_inputtitle, ref string as_inputtext)
end prototypes

global function integer pf_f_inputdialog (string as_wintitle, string as_inputtitle, ref string as_inputtext);// Dialog $$HEX25$$08c7c4b3b0c67cb9200024c608d574d52000acc0a9c690c7d0c58cac200070b374c730d17cb9200085c725b81bbc94b2e4b2$$ENDHEX$$

string ls_retval, ls_parm[]

as_inputtext = ''
openwithparm(pf_w_inputdialog, as_wintitle + "~t" + as_inputtitle + '~t' + as_inputtext)
ls_retval = message.stringparm
if pf_f_parsetoarray(ls_retval, '~t', ls_parm) > 0 then
	if ls_parm[1] = 'OK' then
		as_inputtext = ls_parm[2]
		return 1
	end if
end if

return 0

end function

